<div class="sub-container">
  <div class="table-header-section">
    <div style="width: 70%;">
      <div style="margin-bottom: 10px;">
        <label><input type="checkbox" id="select-all"> Select all</label>
      </div>
      <%= form_with url: apw_root_path, method: :get, local: true do |f| %>
        <div class="checkbox-container">
          <% User.actived.each do |user| %>
            <label>
              <%= check_box_tag "q[user_ids][]", user.id,
                @support.params_search.dig(:user_ids).include?(user.id.to_s), class: "checkbox-item" %>
              <%= user.name %>
            </label>
          <% end %>
        </div>
        <hr>
        <label>
          <%= check_box_tag "q[include_status_done]", 1,
            @support.params_search.dig(:include_status_done) %>
          <strong>Include done tasks</strong>
        </label>
        <%= f.button "Search", type: :submit, id: :search_button %>
      <% end %>
    </div>
  </div>

  <br>
  <div class="gantt-wrapper" style="position:relative;">
    <div id="gantt-loading" class="loading-overlay">
      <div class="spinner"></div>
    </div>
    <div class="bg-white mt-4 border rounded gantt-container">
      <!-- Gantt Header -->
      <div class="flex border-b gantt-header">
        <div class="w-64 p-2 border-r">
          <div class="font-bold">Task name</div>
        </div>
        <div class="w-24 p-2 border-r text-center">
          <div class="font-bold">Owner</div>
        </div>
        <div class="w-24 p-2 border-r text-center">
          <div class="font-bold">Status</div>
        </div>
        <div class="w-24 p-2 border-r text-center">
          <div class="font-bold">Estimate</div>
        </div>
        <div class="flex-1 timeline-scroll-container">

        <!-- Week headers -->
        <div class="flex">
          <% @support.data_ranges.each do |k, value| %>
            <div class="week-header" style="min-width: <%= value.size * 40 %>px; width: <%= value.size * 40 %>px;">
              <%= k %>
            </div>
          <% end %>
        </div>

        <!-- Day headers -->
        <div class="flex">
          <% @support.list_date.each do |date| %>
            <div class="day-column day-header"><%= date.strftime("%d") %></div>
          <% end %>
        </div>
        <div class="flex">
          <% @support.list_date.each do |date| %>
            <div class="day-column day-header"><%= date.strftime("%a") %></div>
          <% end %>

        </div>
      </div>
    </div>
    <div class="timeline-scroll-container"></div>
    <!-- Gantt Body -->
    <div class="gantt-body">
      <!-- Fixed part of the gantt body -->
      <div class="gantt-body-fixed">
        <!-- Office Itinerancy -->
        <% @support.stories.each do |story| %>
          <% next unless @support.parent_tasks_with_story_id[story.id] %>

          <div class="task-group">
            <div class="task-row border-b expandable-row story">
              <div class="task-row-fixed">
                <div class="w-64 p-2 border-r">
                  <i class="fas fa-caret-down task-expand-icon"></i>
                  <i class="fas fa-folder task-icon"></i>
                    <%= link_to story.subject,
                      "https://dev.zigexn.vn/issues/#{story.issue_id}",
                      target: "_blank" %>
                  </div>
                <div class="w-24 p-2 border-r text-center"><%= story.user_name %></div>
                <div class="w-24 p-2 border-r text-center">
                  <%= story.status_display %>
                  <br>
                  <%= "#{story.done_ratio}%" %>
                </div>
                <div class="w-24 p-2 border-r text-center"><%= story.total_estimated_hours.to_f %></div>
              </div>
            </div>

            <% if story.display_childrent? %>
              <% @support.parent_tasks_with_story_id[story.id].each do |parent_task| %>
                <% next unless @support.tasks_with_parent_id[parent_task.issue_id] %>

                <div class="task-row subtask border-b expandable-subtask">
                  <div class="task-row-fixed">
                    <div class="w-64 p-2 border-r pl-6">
                      <i class="fas fa-caret-down task-expand-icon"></i>
                      <i class="fas fa-folder task-icon"></i>
                      <%= link_to parent_task.subject,
                        "https://dev.zigexn.vn/issues/#{parent_task.issue_id}",
                        target: "_blank" %>
                    </div>
                    <div class="w-24 p-2 border-r text-center"><%= parent_task.owner_name %></div>
                    <div class="w-24 p-2 border-r text-center">
                    <%= parent_task.status_display %>
                    <br>
                    <%= "#{parent_task.done_ratio}%" %>
                    </div>
                    <div class="w-24 p-2 border-r text-center">
                      <%= parent_task.total_estimated_hours.to_f %>
                    </div>
                  </div>
                </div>

                <div class="subtask-group">
                  <% @support.tasks_with_parent_id[parent_task.issue_id].each do |task| %>
                    <div class="task-row subtask border-b expandable-subtask">
                      <div class="task-row-fixed">
                        <div class="w-64 p-2 border-r pl-10 truncate-text">
                          <i class="fas fa-file task-icon"></i>
                          <%= link_to task.subject,
                            "https://dev.zigexn.vn/issues/#{task.issue_id}",
                            target: "_blank" %>
                        </div>
                        <div class="w-24 p-2 border-r text-center"><%= task.owner_name %></div>
                        <div class="w-24 p-2 border-r text-center">
                          <%= task.status_display %>
                          <br>
                          <%= "#{task.done_ratio}%" %>
                        </div>
                        <div class="w-24 p-2 border-r text-center">
                          <%= task.total_estimated_hours.to_f %>
                        </div>
                      </div>
                    </div>
                  <% end %>
                </div>
              <% end %>
            <% else %>
              <% @support.parent_tasks_with_story_id[story.id].each do |parent_task| %>

                <div class="task-row subtask border-b expandable-subtask">
                  <div class="task-row-fixed">
                    <div class="w-64 p-2 border-r pl-6">
                      <i class="fas fa-file task-icon"></i>
                      <%= link_to parent_task.subject,
                        "https://dev.zigexn.vn/issues/#{parent_task.issue_id}",
                        target: "_blank" %>
                    </div>
                    <div class="w-24 p-2 border-r text-center"><%= parent_task.owner_name %></div>
                    <div class="w-24 p-2 border-r text-center">
                    <%= parent_task.status_display %>
                    <br>
                    <%= "#{parent_task.done_ratio}%" %>
                    </div>
                    <div class="w-24 p-2 border-r text-center">
                      <%= parent_task.total_estimated_hours.to_f %>
                    </div>
                  </div>
                </div>
              <% end %>
            <% end %>
          </div>
        <% end %>
      </div>
      <div class="gantt-body-timeline">
        <% start_date = @support.min_date %>
        <% end_date   = @support.max_date %>
        <% day_width  = 40 %>
        <% total_days = (end_date - start_date + 1).to_i %>
        <% today = Date.current %>
        <% today_index = (today - start_date).to_i %>
        <div class="timeline-content" style="width:<%= total_days * day_width %>px">
          <% (start_date..end_date).each_with_index do |d, i| %>
            <% if d == today %>
              <div class="today-stripe" style="left:<%= i * day_width %>px"></div>
            <% elsif d.saturday? || d.sunday? %>
              <div class="weekend-stripe" style="left:<%= i * day_width %>px"></div>
            <% end %>
          <% end %>

          <% @support.stories.each do |story| %>
            <% next unless @support.parent_tasks_with_story_id[story.id] %>
            <div class="task-row border-b">
              <div class="task-row-timeline">
              </div>
            </div>

            <% if story.display_childrent? %>
              <% @support.parent_tasks_with_story_id[story.id].each do |parent_task| %>
                <!-- Office Itinerancy -->
                <div class="task-row border-b">
                  <div class="task-row-timeline">
                  </div>
                </div>
                <% @support.tasks_with_parent_id[parent_task.issue_id].each do |task| %>
                   <!-- Office Itinerancy -->
                    <div class="task-row border-b">
                      <div class="task-row-timeline">
                        <div class="task-bar <%= task.closed? ? :done : (:overdue if task.due_date && task.due_date < Date.current) %>"
                            style="left: <%= day_width * (task.start_date.try('-', start_date)).to_i %>px;
                            width: <%= day_width * ((task.due_date.try('-', task.start_date)).to_i + 1) %>px;
                            top: 8px;">
                          <div class="task-progress" style="width:<%= task.done_ratio %>%;">
                            <%= "#{task.done_ratio}%" unless task.closed? %>
                          </div>
                        </div>
                      </div>
                    </div>
                <% end %>
              <% end %>
            <% else %>
              <% @support.parent_tasks_with_story_id[story.id].each do |parent_task| %>
                <!-- Office Itinerancy -->
                <div class="task-row border-b">
                  <div class="task-row-timeline">
                    <div class="task-bar <%= parent_task.closed? ? :done : (:overdue if parent_task.due_date && parent_task.due_date < Date.current) %>"
                          style="left: <%= day_width * (parent_task.start_date.try('-', start_date)).to_i %>px;
                          width: <%= day_width * ((parent_task.due_date.try('-', parent_task.start_date)).to_i + 1) %>px;
                          top: 8px;">
                      <div class="task-progress" style="width:<%= parent_task.done_ratio %>%;">
                        <%= "#{parent_task.done_ratio}%" unless parent_task.closed? %>
                      </div>
                    </div>
                  </div>
                </div>
                <% end %>
            <% end %>
          <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<%= content_for :stylesheet do %>
  <%= stylesheet_link_tag 'entries/index' %>
<% end %>

<%= content_for :javascripts do %>
  <script type="text/javascript">
    if (document.querySelectorAll(".checkbox-item:checked").length === document.querySelectorAll(".checkbox-item").length) {
      document.getElementById("select-all").checked = true;
    }

    document.addEventListener("DOMContentLoaded", function () {
      const selectAll = document.getElementById("select-all");
      const checkboxes = document.querySelectorAll(".checkbox-item");

      selectAll.addEventListener("change", function () {
        checkboxes.forEach(checkbox => {
            checkbox.checked = selectAll.checked;
        });
      });

      checkboxes.forEach(checkbox => {
        checkbox.addEventListener("change", function () {
          if (!this.checked) {
              selectAll.checked = false;
          } else if (document.querySelectorAll(".checkbox-item:checked").length === checkboxes.length) {
              selectAll.checked = true;
          }
        });
      });
    });


    $(document).ready(function () {
      const $timelineContainer = $('.timeline-scroll-container'); // header
      const $ganttBodyTimeline = $('.gantt-body-timeline');       // body timeline
      const $ganttBodyFixed    = $('.gantt-body-fixed');          // body fixed

      // --- Ẩn tất cả subtask-group ngay từ đầu ---
      const $fixedRows = $('.gantt-body-fixed .task-row');
      const $timelineRows = $('.gantt-body-timeline .task-row');

      // $('.subtask-group').each(function () {
      //   const $group = $(this);
      //   $group.hide();

      //   $group.find('.task-row.subtask').each(function () {
      //     const index = $fixedRows.index(this);
      //     if (index >= 0) {
      //       $timelineRows.eq(index).hide();
      //     }
      //   });
      // });

      function syncRowHeights() {
        const $fixedRows = $('.gantt-body-fixed .task-row');
        const $timelineRows = $('.gantt-body-timeline .task-row');

        $fixedRows.each(function (i) {
          const $fixedRow = $(this);
          const $timelineRow = $timelineRows.eq(i);
          if (!$timelineRow.length) return;

          const maxHeight = Math.max($fixedRow.outerHeight(), $timelineRow.outerHeight());
          $fixedRow.height(maxHeight);
          $timelineRow.height(maxHeight);
        });
      }

      syncRowHeights();
      $(window).on('resize', syncRowHeights);

      // --- Đồng bộ ngang ---
      $timelineContainer.on('scroll', function () {
        $ganttBodyTimeline.scrollLeft($(this).scrollLeft());
      });

      // --- Đồng bộ dọc ---
      let syncing = false;

      $ganttBodyTimeline.on('scroll', function () {
        if (syncing) return;
        syncing = true;
        $timelineContainer.scrollLeft($(this).scrollLeft()); // ngang
        $ganttBodyFixed.scrollTop($(this).scrollTop());      // dọc
        syncing = false;
      });

      $ganttBodyFixed.on('scroll', function () {
        if (syncing) return;
        syncing = true;
        $ganttBodyTimeline.scrollTop($(this).scrollTop());
        syncing = false;
      });

      // --- Canh giữa "today stripe" ---
      const $todayStripe = $('.today-stripe');
      if ($todayStripe.length) {
        const dayWidth = 40;
        const left = parseInt($todayStripe.css('left')) || 0;
        const scrollPos = Math.max(0, left - $ganttBodyTimeline.width() / 2 + dayWidth / 2);

        $ganttBodyTimeline.scrollLeft(scrollPos);
        $timelineContainer.scrollLeft(scrollPos);
      }

      // --- Đồng bộ chiều cao row ---

      // --- Expand/Collapse row ---
      $(function () {
  // ====== PAIRING: ghép từng cặp row fixed <-> timeline theo index và gán data-row-id ======
  function pairRowsAndIndex() {
    const $fixedRows    = $('.gantt-body-fixed .task-row');
    const $timelineRows = $('.gantt-body-timeline .task-row');

    const count = Math.min($fixedRows.length, $timelineRows.length);
    const map = new Map(); // id -> { $fixed, $timeline, defaultDisplayFixed, defaultDisplayTimeline }

    for (let i = 0; i < count; i++) {
      const $f = $fixedRows.eq(i);
      const $t = $timelineRows.eq(i);

      // lấy/đặt id
      let id = $f.attr('data-row-id') || $t.attr('data-row-id');
      if (!id) id = 'row-' + i + '-' + Math.random().toString(36).slice(2, 7);

      $f.attr('data-row-id', id);
      $t.attr('data-row-id', id);

      // lưu display mặc định từng bên (dùng computed style, tránh sai loại: flex/grid/block)
      const defFix = ($f.css('display') && $f.css('display') !== 'none') ? $f.css('display') : 'flex';
      const defTim = ($t.css('display') && $t.css('display') !== 'none') ? $t.css('display') : 'flex';

      $f.data('defaultDisplay', defFix);
      $t.data('defaultDisplay', defTim);

      map.set(id, { $fixed: $f, $timeline: $t, defFix, defTim });
    }

    // (không bắt buộc) cảnh báo nếu số row lệch nhau
    if ($fixedRows.length !== $timelineRows.length) {
      console.warn('[Gantt] Số task-row không khớp:',
        'fixed=', $fixedRows.length, 'timeline=', $timelineRows.length);
    }

    return map;
  }

  // tạo map ban đầu
  let rowMap = pairRowsAndIndex();

  // Nếu DOM thay đổi (thêm bớt row), build lại map
  const fixedContainer = document.querySelector('.gantt-body-fixed');
  const timelineContainer = document.querySelector('.gantt-body-timeline');
  if (fixedContainer && timelineContainer) {
    const mo = new MutationObserver(() => {
      rowMap = pairRowsAndIndex();
    });
    mo.observe(fixedContainer, { childList: true, subtree: true });
    mo.observe(timelineContainer, { childList: true, subtree: true });
  }

  // ====== Helpers show/hide theo id hoặc theo element fixed ======
  function setVisibleById(id, visible) {
    const rec = rowMap.get(id);
    if (!rec) return;
    if (visible) {
      rec.$fixed.css('display', rec.defFix || 'flex');
      rec.$timeline.css('display', rec.defTim || 'flex');
    } else {
      rec.$fixed.css('display', 'none');
      rec.$timeline.css('display', 'none');
    }
  }

  function setVisibleByFixed($fixedEl, visible) {
    const id = $fixedEl.attr('data-row-id');
    if (id) setVisibleById(id, visible);
  }

  // ====== Ẩn tất cả .subtask-group ngay từ đầu (và đồng bộ timeline) ======
  $('.subtask-group').each(function () {
    const $group = $(this);
    // $group.hide();

    // Ẩn luôn các .task-row.subtask phía fixed và timeline (theo id cặp)
    // $group.find('.task-row.subtask').each(function () {
    //  setVisibleByFixed($(this), false);
    // });
  });

  // ====== Expand/Collapse (group 1 & group 2) — đảm bảo đồng bộ timeline ======
  $(document).on('click', '.expandable-row, .expandable-subtask', function (e) {
    e.stopPropagation();
    const $btn = $(this);

    // toggle caret
    const $caret = $btn.find('.fa-caret-down, .fa-caret-right').first();
    if ($caret.length) $caret.toggleClass('fa-caret-down fa-caret-right');

    // --- Level 2: .expandable-subtask -> điều khiển .subtask-group liền kề ---
    if ($btn.hasClass('expandable-subtask')) {
      const $subtaskGroup = $btn.next('.subtask-group');
      if (!$subtaskGroup.length) return;

      const willShow = !$subtaskGroup.is(':visible');
      $subtaskGroup.toggle(willShow);

      $subtaskGroup.find('.task-row.subtask').each(function () {
        setVisibleByFixed($(this), willShow);
      });

      $btn.attr('data-expanded', willShow ? 'true' : 'false');
      return;
    }

    // --- Level 1: .expandable-row -> điều khiển tất cả .subtask và .subtask-group bên trong .task-group ---
    if ($btn.hasClass('expandable-row')) {
      const $taskGroup = $btn.closest('.task-group');
      if (!$taskGroup.length) return;

      const $children = $taskGroup.find('.subtask, .subtask-group');
      const anyVisible = $children.filter(':visible').length > 0;
      const willShowAll = !anyVisible;

      $children.each(function () {
        const $ch = $(this);
        if ($ch.hasClass('subtask-group')) {
          $ch.toggle(willShowAll);
          // đồng thời bật/tắt tất cả con subtask bên trong group này
          $ch.find('.task-row.subtask').each(function () {
            setVisibleByFixed($(this), willShowAll);
          });
        } else {
          // là 1 .subtask (task-row) đơn lẻ
          setVisibleByFixed($ch, willShowAll);
        }
      });

      $btn.attr('data-expanded', willShowAll ? 'true' : 'false');
    }
  });

  // ====== Khi bạn hide/show caret (ẩn button bằng CSS rồi show lại) ======
  // Nếu việc “ẩn caret” của bạn đang làm đổi display/layout gây mất map,
  // sau khi show lại caret, gọi rebuild map:
  $(document).on('show-gantt-caret', function () {
    rowMap = pairRowsAndIndex();
  });
});


      function finishLoading() {
        $('#gantt-loading').fadeOut(300); // hoặc .remove()
      }

      requestAnimationFrame(() => {
        finishLoading();
      });

      $('.task-row-fixed > .w-64.p-2.border-r.pl-10').each(function () {
        const $el = $(this);

        // Gắn class truncate
        $el.addClass('truncate-text');

        // Nếu text dài hơn width thì set tooltip
        if (this.scrollWidth > this.clientWidth) {
          $el.attr('title', $el.text().trim());
        }
      });

      $(function () {
  // selector mục tiêu — chỉnh nếu html của bạn khác
  const selector = '.task-row-fixed > .w-64.p-2.border-r.pl-10';

  // thêm class truncate cho đảm bảo
  const $targets = $(selector);
  $targets.addClass('truncate-text');

  // lưu full text và set title nếu đang overflow
  function refreshTooltipsFor($els) {
    $els.each(function () {
      const el = this;
      const $el = $(this);
      const full = $el.text().trim();
      $el.data('fullText', full);

      // set title fallback nếu overflow
      if (el.scrollWidth > el.clientWidth) {
        $el.attr('title', full);
      } else {
        $el.removeAttr('title');
      }
    });
  }

  refreshTooltipsFor($targets);

  // tạo element tooltip custom (append 1 lần)
  const $tt = $('<div class="custom-tooltip" aria-hidden="true"></div>').appendTo('body');

  // position tooltip (gần chuột, tránh tràn khỏi màn hình)
  function posTooltip(event) {
    const padding = 12;
    const winW = $(window).width();
    const winH = $(window).height();
    const scrollLeft = $(window).scrollLeft();
    const scrollTop = $(window).scrollTop();

    const ttW = $tt.outerWidth();
    const ttH = $tt.outerHeight();
    let left = event.pageX + 12;
    let top  = event.pageY + 12;

    // nếu tràn phải => show bên trái chuột
    if (left + ttW + padding > winW + scrollLeft) {
      left = event.pageX - ttW - 12;
    }
    // nếu tràn dưới => show phía trên
    if (top + ttH + padding > winH + scrollTop) {
      top = event.pageY - ttH - 12;
    }
    $tt.css({ left: left, top: top });
  }

  // show only when truncated
  $(document).on('mouseenter', selector, function (ev) {
    const el = this;
    if (el.scrollWidth <= el.clientWidth) return; // not truncated -> skip

    const $el = $(this);
    const full = $el.data('fullText') || $el.text().trim();
    $tt.text(full).show();
    posTooltip(ev);
  });

  $(document).on('mousemove', selector, function (ev) {
    if ($tt.is(':visible')) posTooltip(ev);
  });

  $(document).on('mouseleave', selector, function () {
    $tt.hide();
  });

  // nếu nội dung có thể thay đổi sau khi load, quan sát để cập nhật title/ dữ liệu
  // (tự động cho những phần có sẵn)
  const observer = new MutationObserver(function () {
    refreshTooltipsFor($targets);
  });
  $targets.each(function () {
    observer.observe(this, { childList: true, characterData: true, subtree: true });
  });

  // cũng cập nhật khi resize cửa sổ (vì overflow có thể thay đổi)
  $(window).on('resize', function () {
    refreshTooltipsFor($targets);
  });
});

    });
  </script>
<% end %>
